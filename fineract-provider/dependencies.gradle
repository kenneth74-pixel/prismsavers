/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

dependencies {
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    // Never use "compile" scope, but make all dependencies either 'implementation', 'runtimeOnly' or 'testCompile'.
    // Note that we never use 'api', because Fineract at least currently is a simple monolithic application ("WAR"), not a library.
    // We also (normally should have) no need to ever use 'compileOnly'.

    // implementation dependencies are directly used (compiled against) in src/main (and src/test)
    //
    implementation(
             "org.springframework.boot:spring-boot-starter-web:2.7.3",
             "org.springframework.boot:spring-boot-starter-security:2.7.3",
            "org.springframework.boot:spring-boot-starter-cache:2.7.3",
            "org.springframework.boot:spring-boot-starter-oauth2-resource-server:2.7.3",

            'org.glassfish.jersey.media:jersey-media-multipart:2.35',

            "org.springframework:spring-jms:5.3.13",
            "org.springframework:spring-context-support:5.3.13",

            'com.google.guava:guava',
            'com.google.code.gson:gson',

            "jakarta.jms:jakarta.jms-api:2.0.3",
//            'jakarta.management.j2ee:jakarta.management.j2ee-api:1.1.0',

            "com.squareup.retrofit2:retrofit:2.9.0",
            "com.squareup.okhttp3:okhttp:4.9.1",
            'com.squareup.okhttp3:okhttp-urlconnection:4.9.1',

            'org.pentaho.reporting.engine:classic-core:9.4.0.0-343',
            'org.pentaho.reporting.engine:classic-extensions:9.4.0.0-343',
            'org.pentaho.reporting.engine:classic-extensions-scripting:9.4.0.0-343',
            'org.pentaho.reporting.engine:wizard-core:9.4.0.0-343',
            'org.pentaho.reporting.designer:wizard-xul:8.2.0.0-342',

            'org.pentaho.reporting.library:libbase:9.4.0.0-343',
            'org.pentaho.reporting.library:libdocbundle:9.4.0.0-343',
            'org.pentaho.reporting.library:libfonts:9.4.0.0-343',
            'org.pentaho.reporting.library:libformat:9.4.0.0-343',
            'org.pentaho.reporting.library:libformula:9.4.0.0-343',
            'org.pentaho.reporting.library:libloader:9.4.0.0-343',
            'org.pentaho.reporting.library:librepository:9.4.0.0-343',
            'org.pentaho.reporting.library:libserializer:9.4.0.0-343',
            'org.pentaho.reporting.library:libsparkline:9.4.0.0-343',
            'org.pentaho.reporting.library:libxml:9.4.0.0-343',
            'org.openjdk.nashorn:nashorn-core:15.4',
            'org.ow2.asm:asm:9.3', // versions lower than this will break

            'org.apache.commons:commons-lang3:3.12.0',
            'commons-io:commons-io',
            'org.apache.poi:poi',
            'org.apache.poi:poi-ooxml',
            'org.apache.poi:poi-ooxml-schemas',
            'org.apache.tika:tika-core:1.28.2',

            'org.liquibase:liquibase-core:4.9.1',

            'com.github.librepdf:openpdf:1.3.26',
            'com.github.spullara.mustache.java:compiler:0.9.6',
            'com.jayway.jsonpath:json-path:2.7.0',

            'javax.cache:cache-api:1.1.1',

            'com.github.spotbugs:spotbugs-annotations:4.5.2',
            'io.swagger.core.v3:swagger-annotations:2.1.10',
            'org.webjars:webjars-locator-core:0.48',

            'com.google.cloud.sql:mysql-socket-factory-connector-j-8:1.4.0',
            'com.squareup.retrofit2:converter-gson:2.9.0',
            'org.apache.commons:commons-email:1.5',
            'com.sun.mail:javax.mail:1.6.2'
              )

    implementation('org.springframework.boot:spring-boot-starter-jersey:2.7.3') {
        exclude group: 'org.glassfish.hk2.external', module: 'aopalliance-repackaged'
        exclude group: 'org.glassfish.hk2', module: 'hk2-runlevel'
        exclude group: 'org.hibernate.validator', module: 'hibernate-validator'
        exclude group: 'jakarta.activation', module: 'jakarta.activation-api'
    }
    implementation('org.dom4j:dom4j') {
        exclude group: 'javax.xml.bind'
    }
    implementation('jakarta.xml.bind:jakarta.xml.bind-api') {
        exclude group: 'jakarta.activation'
    }
    implementation('org.apache.activemq:activemq-broker:5.16.2') {
        exclude group: 'org.apache.geronimo.specs'
    }
    implementation('org.springframework.boot:spring-boot-starter-data-jpa:2.7.3') {
        exclude group: 'org.hibernate'
    }
    implementation('org.apache.openjpa:openjpa:3.1.2') {
        exclude group: 'org.eclipse.persistence'
        exclude group: 'org.apache.geronimo.specs'
    }
    implementation('org.quartz-scheduler:quartz:2.3.2') {
        exclude group: 'com.zaxxer', module: 'HikariCP-java7'
    }
    implementation('com.amazonaws:aws-java-sdk-s3:1.12.80') {
        exclude group: 'commons-logging'
    }
//    implementation('org.mnode.ical4j:ical4j:3.0.23') {
//        exclude group: 'commons-logging'
//        exclude group: 'javax.activation'
//    }

    implementation('org.ehcache:ehcache:3.9.4') {
        exclude group: 'com.sun.activation'
    }

    runtimeOnly('org.glassfish.jaxb:jaxb-runtime') {
        exclude group: 'com.sun.activation'
    }

    // runtimeOnly dependencies are things that Fineract code has no direct compile time dependency on, but which must be present at run-time
    runtimeOnly(
            'org.apache.bval:org.apache.bval.bundle',

            // Although fineract (at the time of writing) doesn't have any compile time dep. on httpclient,
            // it's useful to have this for the Spring Boot TestRestTemplate http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#boot-features-rest-templates-test-utility
            'org.apache.httpcomponents:httpclient'
            )

    // testCompile dependencies are ONLY used in src/test, not src/main.
    // Do NOT repeat dependencies which are ALREADY in implementation or runtimeOnly!
    //
    testImplementation( 'io.cucumber:cucumber-spring',
            'io.github.classgraph:classgraph',
            'io.cucumber:cucumber-core',
            'io.cucumber:cucumber-java',
            'io.cucumber:cucumber-java8',
            'io.cucumber:cucumber-junit-platform-engine',
            )
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.jayway.jsonpath', module: 'json-path'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'jakarta.activation'
        exclude group: 'javax.activation'
        exclude group: 'org.skyscreamer'
    }
    testImplementation ('org.mockito:mockito-inline')
}
